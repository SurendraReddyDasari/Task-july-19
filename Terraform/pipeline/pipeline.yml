trigger:
  branches:
    include:
      - main

jobs:
- job: BuildAndTest
  displayName: 'Build and Test'
  dependsOn: TerraformApply
  pool:
    vmImage: 'windows-latest'
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'publish'
      targetPath: '$(Build.ArtifactStagingDirectory)/publish'

- job: TerraformPlan
  displayName: Terraform Plan
  
  steps:
  - script: |
      choco install terraform -y 
      terraform version
    displayName: 'Terraform Version'

  - script: |
      terraform -chdir=Terraform/main/ init -input=false
    displayName: 'Init'
    env:
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)

  - script: |
      terraform -chdir=Terraform/main/ validate
    displayName: 'Validate'

  - script: |
      terraform -chdir=Terraform/main/ plan -input=false
    displayName: 'Plan'
    env:
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)

- job: TerraformApply
  displayName: Terraform Apply
  dependsOn: TerraformPlan
  steps:
  - script: |
      choco install terraform -y 
      terraform version
    displayName: 'Terraform Version'

  - script: |
      terraform -chdir=Terraform/main/ init -input=false
    displayName: 'Init'
    env:
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)

  - script: |
      terraform -chdir=Terraform/main/ apply -auto-approve -input=false
    displayName: 'Apply'
    env:
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)


- job: CD 
  displayName: Deploy on webapp
  dependsOn: CI
  steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download artifacts'
    inputs:
      artifactName: 'publish'
      downloadPath: '$(Pipeline.Workspace)/publish'

  - task: AzureRmWebAppDeployment@4
    displayName: 'Deploy Azure App Service'
    inputs:
      azureSubscription: '$(Parameters.ConnectedServiceName)'
      appType: '$(Parameters.WebAppKind)'
      WebAppName: '$(Parameters.WebAppName)'
      package: '$(Pipeline.Workspace)/publish/**/*.zip'
      RuntimeStack: 'DOTNETCORE|7.0'
